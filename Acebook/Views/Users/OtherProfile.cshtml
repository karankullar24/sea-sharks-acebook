@model User

@{
    int? userId = Context.Session.GetInt32("user_id");
}

<div class="flex justify-center w-full mt-8">
    <!-- Outer container -->
    <div class="flex flex-col lg:flex-row w-full max-w-7xl gap-8">

        <!-- 🧍 Left column: profile picture + bio + friends -->
        <div class="flex flex-col top-20 self-start sticky items-center lg:items-start w-full lg:w-1/3 space-y-6">

            @{
            string imagePath; 
            if (!string.IsNullOrEmpty(Model.ProfilePicturePath)){
                imagePath = Model.ProfilePicturePath;
            }
            else
            {
                imagePath = "/images/Placeholder.png";
            }
            }


            <!-- Profile Picture -->
            <div class="relative flex justify-center">
                <img id="profile-pic" src="@imagePath" alt="Profile Picture"
                    class="object-cover w-48 h-48 rounded-full border border-gray-400 shadow-sm cursor-pointer transition-transform duration-300 hover:opacity-80" />
            </div>

            <!-- Bio -->
            <div class="bg-white rounded-lg p-4 shadow-md w-full max-w-xs">
                <h2 data-testid="bio-name" class="text-md mb-3 text-gray-500 font-semibold border-b pb-2">
                    @Model.FirstName's Bio
                </h2>
                <ul>
                    <li data-testid="bio-tagline" class="italic text-gray-400 mt-1">@Model.ProfileBio.Tagline</li>
                    <li data-testid="bio-age" class="text-gray-400 mt-1">Age: @Model.ProfileBio.Age</li>
                    <li data-testid="bio-relationshipstatus" class="text-gray-400 mt-1">Relationship Status:
                        @Model.ProfileBio.RelationshipStatus</li>
                    <li data-testid="bio-pets" class="text-gray-400 mt-1">Pets: @Model.ProfileBio.Pets</li>
                    <li data-testid="bio-job" class="text-gray-400 mt-1 mb-2">Job: @Model.ProfileBio.Job</li>
                </ul>
            </div>

            <!-- Friends -->
            <div class="bg-white rounded-lg p-4 shadow-md w-full max-w-xs">
                <h2 data-testid="friends-header" class="text-md mb-3 text-gray-500 font-semibold border-b pb-2">Friends
                </h2>

                @foreach (var friend in ViewBag.Friends)
                {
                    User other = (friend.RequesterId == ViewBag.ProfileUserId) ? friend.Accepter : friend.Requester;

                string otherImagePath; 
                if (!string.IsNullOrEmpty(other.ProfilePicturePath)){
                    otherImagePath = other.ProfilePicturePath;
                }
                else
                {
                    otherImagePath = "/images/Placeholder.png";
                }

                    <div class="group flex items-center justify-between hover:bg-gray-100 rounded-lg mb-2 p-1 transition">
                        <div class="flex items-center space-x-3">
                            <img src="@otherImagePath"
                                class="w-10 h-10 rounded-full object-cover border border-gray-300">
                            <a asp-controller="Users" asp-action="Index" asp-route-id="@other.Id" data-testid="@other.FirstName"
                                class="text-xs font-medium text-gray-700 hover:text-teal-600">
                                @other.FirstName @other.LastName
                            </a>
                        </div>
                        <button class="hidden group-hover:block text-gray-500 hover:text-gray-700">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24"
                                stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 6h.01M12 12h.01M12 18h.01" />
                            </svg>
                        </button>
                    </div>
                }

                <a asp-controller="Friends" asp-action="ViewUserFriends" asp-route-id=@Model.Id data-testid="see-all-friends"
                    class="text-teal-500 hover:underline text-sm cursor-pointer">
                    See All Friends
                </a>
            </div>
        </div>

        <!-- 📜 Right column -->
        <div class="flex flex-col w-full lg:w-2/3 space-y-6">

            <!-- Name + Tagline + Friend Button -->
            <div class="bg-white rounded-lg p-6 shadow-md">
                <h1 class="text-4xl font-bold text-teal-700 mb-2">@Model.FirstName @Model.LastName</h1>
                <p data-testid="under-name-tagline-text" class="italic text-gray-400 mb-4">
                    @(Model.ProfileBio.Tagline ?? "Just keep swimming!")
                </p>

                @{
                    var alreadyFriends = ViewBag.AlreadyFriends as List<int>;
                    var pendingRequests = ViewBag.PendingRequests as List<Friend>;
                }

                @if (alreadyFriends.Contains(@Model.Id))
                {
                    <button disabled data-testid="already-friends" class="bg-gray-300 text-gray-700 text-sm font-medium py-1 px-3 rounded">
                        Already Friends
                    </button>
                }
                else if (pendingRequests.Any(f =>
                (f.RequesterId == ViewBag.currentUserId && f.AccepterId == @Model.Id) ||
                (f.RequesterId == @Model.Id && f.AccepterId == ViewBag.currentUserId)))
                {
                    <button disabled class="bg-orange-200 text-gray-700 text-sm font-medium py-1 px-3 rounded">
                        Pending Request
                    </button>
                }
                else
                {
                    <form asp-action="AddFriend" asp-controller="Friends" method="post"
                        onsubmit="return confirm('Are you sure you want to add this person?');">
                        <input type="hidden" name="receiverId" value="@Model.Id" />
                        <button data-testid="add-friend" type="submit"
                            class="bg-teal-600 hover:bg-teal-700 text-white text-sm font-medium py-1 px-3 rounded">
                            Add Friend
                        </button>
                    </form>
                }
            </div>

            <!-- Write on Wall -->
            @if (ViewBag.Friendship)
            {
                <div class="bg-white rounded-lg w-full p-4 shadow-md">
                    <h2 class="text-lg font-bold mb-3">Write on their wall</h2>
                    <form action="@Url.Action("Create", "Posts")" method="post" enctype="multipart/form-data">
                        <textarea required id="post-input" data-testid="create-post-input"
                        class="w-full resize-none border p-3 rounded-md focus:outline-none focus:border-teal-500 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-25 transition-shadow duration-200"
                        name="content" maxlength="2000"
                        placeholder="Say something nice... (max 2000 characters)"></textarea>
                        <input type="hidden" name="WallId" value="@Model.Id" />
                        <div class="flex justify-between items-center mt-3">
                            <label for="file-upload" class="flex items-center text-sm text-teal-500 hover:underline">Attach Image</label>
                            <input id="file-upload" type="file" name="postPicture" accept="image/*"class="hidden"/>
                            <span id="file-name" class="text-gray-500 text-sm italic">No file chosen</span>
                            <input type="hidden" name="returnUrl"
                                value="@Url.Action("Index", "Users", new { id = Model.Id })" />
                            <button id="post-submit" data-testid="create-post-submit" type="submit"
                                class="bg-teal-600 text-white text-sm font-medium px-4 py-2 rounded-md hover:bg-teal-400 transition">
                                Submit
                            </button>
                        </div>
                    </form>
                </div>
            }

            <!-- Posts -->
            @foreach (Post post in ViewBag.Posts)
            {
                string profilePictureImagePath; 
                if (!string.IsNullOrEmpty(post.User.ProfilePicturePath)){
                    profilePictureImagePath = post.User.ProfilePicturePath;
                }
                else
                {
                    profilePictureImagePath = "/images/Placeholder.png";
                }
                <div class="bg-white rounded-lg w-full p-4 shadow-md">
                    <div class="flex justify-between items-center">
                        <a asp-controller="Users" asp-action="Index" asp-route-id="@post.User.Id" data-testid="Post-link @post.User.FirstName"
                            class="text-md font-semibold text-gray-800 hover:text-teal-600">
                            @post.User.FirstName @post.User.LastName
                        </a>
                        <img src="@profilePictureImagePath"
                            class="w-12 h-12 rounded-full object-cover border border-gray-400" />
                    </div>

                    <p data-testid="post-content" class="text-gray-700 mt-2 leading-relaxed">
                    @if(!string.IsNullOrEmpty(post.Content)){
                        @if (@post.CheckLength())
                        {
                        @post.Content
                        }
                        else
                        {
                        @post.FormatPostContent()
                        }
                        }
                        else
                        {
                        @post.Content;
                        }
                    </p>
                    @if (@post.PostPicturePath != null)
                    {
                        <div class="w-full text-center">
                        <img id="post-picture-@post.Id" data-testid="post-picture-@post.Id" src="@post.PostPicturePath" alt="Post Picture"
                        class="post-picture max-w-[65%] h-auto inline-block object-contain rounded-md" />
                        </div>
                    }
                    <div class="flex justify-end mt-2">
                        <button class="text-teal-600 text-sm hover:underline">see more</button>
                    </div>

                    <p class="text-xs text-gray-400 mt-4">Created on: @post.FormattedCreatedOn</p>

                    <div class="flex border-t border-gray-200 divide-x divide-gray-200 justify-around mt-4 pt-3">
                        <button class="text-gray-600 text-sm hover:text-teal-600">Like (12)</button>
                        <button class="text-gray-600 text-sm hover:text-teal-600">Comment (0)</button>
                        <button class="text-gray-600 text-sm hover:text-teal-600">View Profile</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<!-- Fullscreen overlay for enlarged image -->
<div id="image-overlay" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center hidden z-50">
    <img id="overlay-image" src="/images/Placeholder.png" alt="Enlarged Profile Picture"
        class="max-w-3xl w-11/12 md:w-auto rounded-lg shadow-lg cursor-pointer transition-transform duration-300 transform scale-100 hover:scale-105" />
</div>

<script>
    const profilePic = document.getElementById("profile-pic");
    const overlay = document.getElementById("image-overlay");
    const overlayImage = document.getElementById("overlay-image");

    profilePic.addEventListener("click", () => {
        overlay.classList.remove("hidden");
        overlayImage.src = profilePic.src; // Use the same image
    });

    // Hide overlay when user clicks outside or on the image
    overlay.addEventListener("click", (e) => {
        if (e.target === overlay || e.target === overlayImage) {
            overlay.classList.add("hidden");
        }
    });
</script>

<script>
  // 🟩 Post picture enlarge logic
  document.addEventListener('DOMContentLoaded', () => {
    const pics = document.querySelectorAll('.post-picture');
    const overlay = document.getElementById('image-overlay');
    const overlayImage = document.getElementById('overlay-image');

    pics.forEach(img => {
      img.addEventListener('click', () => {
        overlayImage.src = img.src;
        overlay.classList.remove('hidden');
      });
    });

    // Close on outside click or ESC
    overlay.addEventListener('click', (e) => {
      if (e.target === overlay) overlay.classList.add('hidden');
    });
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') overlay.classList.add('hidden');
    });
  });
</script>

<script>
  const fileInput = document.getElementById("file-upload");
  const fileNameDisplay = document.getElementById("file-name");
  fileInput.addEventListener("change", function () {
    // If at least one file is chosen
    if (fileInput.files.length > 0) {
      fileNameDisplay.textContent = fileInput.files[0].name;
      fileNameDisplay.classList.remove("text-gray-500", "italic");
      fileNameDisplay.classList.add("text-teal-700", "font-medium");
    } else {
      // Reset text if no file is chosen
      fileNameDisplay.textContent = "No file chosen";
      fileNameDisplay.classList.add("text-gray-500", "italic");
    }
  });
</script>